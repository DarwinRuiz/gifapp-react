{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","components/GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","evento","preventDefault","trim","length","cats","type","value","placeholder","onChange","target","getGifs","category","a","url","encodeURI","fetch","respuesta","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","elemento","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAKaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACI,uBAAMC,SAVW,SAACC,GAClBA,EAAOC,iBAEHJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAKlB,UACI,8CACA,uBACIO,KAAK,OACLC,MAAOT,EACPU,YAAY,SACZC,SApBc,SAACR,GACvBF,EAAcE,EAAOS,OAAOH,c,+BCXvBI,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAIKI,MAAMF,GAJX,cAIbG,EAJa,gBAKIA,EAAUC,OALd,uBAKXC,EALW,EAKXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXvB,kBAeZM,GAfY,4CAAH,sDCEPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACjC,OACI,sBAAKc,UAAU,OAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCDHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAEtB,ECJwB,SAACA,GACzB,MAA0Bf,mBAAS,CAC/BsB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAiBA,OAZAC,qBAAU,WAENxB,EAAQC,GAAUwB,MAAK,SAAAd,GAEnBY,EAAS,CACLf,KAAMG,EACNU,SAAS,SAIlB,CAACpB,IAEGqB,EDd2BI,CAAazB,GAAjCa,EAAd,EAAQN,KAAca,EAAtB,EAAsBA,QAEtB,OACI,qCACI,oBAAIJ,UAAU,sBAAd,SAAqChB,IAEpCoB,GAAW,mBAAGJ,UAAU,iBAAb,wBAEZ,qBAAKA,UAAU,kDAAf,SAGQH,EAAOJ,KAAI,SAAAiB,GAAQ,OACf,cAAC,EAAD,eAAmCA,GAAjBA,EAASf,aEftCgB,EAAe,WAExB,MAAoC1C,mBAAU,CAAC,WAA/C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAEA,OACI,gCACI,8CAEA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BACM4C,EAAWnB,KAAK,SAACT,GACf,OAAO,cAAC,EAAD,CAAwBA,SAAaA,GAAvBA,Y,MCRzC6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.ae2561c9.chunk.js","sourcesContent":["\r\nimport { React, useState } from 'react'\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n\r\n    const handleInputChange = (evento) => {\r\n        setInputValue(evento.target.value);\r\n    }\r\n\r\n    const handleSubmit = (evento) => {\r\n        evento.preventDefault();\r\n\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories(cats => [inputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <h2>Add Category</h2>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                placeholder=\"Buscar\"\r\n                onChange={handleInputChange} />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n};","export const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=LXBgjGWdoZUMy7k8y2JipoHRMWO8vpZ8`;\r\n\r\n\r\n    const respuesta = await fetch(url);\r\n    const { data } = await respuesta.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({ title, url }) => {\r\n    return (\r\n        <div className=\"card\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data: images, loading } = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h1 className=\"animate__fadeInDown\">{category}</h1>\r\n\r\n            {loading && <p className=\"animate__flash\">Loading...</p>}\r\n\r\n            <div className=\"card-grid animate__animated animate__fadeInLeft\">\r\n\r\n                {\r\n                    images.map(elemento => (\r\n                        <GifGridItem key={elemento.id} {...elemento} />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n        getGifs(category).then(img => {\r\n\r\n            setState({\r\n                data: img,\r\n                loading: false\r\n            })\r\n\r\n        })\r\n    }, [category])\r\n\r\n    return state;\r\n}\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './AddCategory';\r\nimport { GifGrid } from './GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState( ['Naruto'] );\r\n\r\n    return (\r\n        <div>\r\n            <h2>GifExpertApp</h2>\r\n\r\n            <AddCategory setCategories= {setCategories} />\r\n            <hr />\r\n\r\n            <ol>\r\n                { categories.map( (category) => {\r\n                    return <GifGrid key={category} category = { category }/>\r\n                })}\r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './components/GifExpertApp';\n\nimport './index.css';\n\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}